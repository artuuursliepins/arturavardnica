import matplotlib.pyplot as plt
import networkx as nx

# Funkcija Tjūringa testa vizualizācijai
def draw_turing_test():
    G = nx.DiGraph()

    # Mezglu definēšana
    G.add_nodes_from(["Tiesnesis", "Cilvēks", "Mašīna"])
    
    # Savienojumi (bultiņas)
    edges = [("Tiesnesis", "Cilvēks"), ("Tiesnesis", "Mašīna")]
    G.add_edges_from(edges)

    # Diagrammas zīmēšana
    plt.figure(figsize=(6, 4))
    pos = {"Tiesnesis": (0.5, 1), "Cilvēks": (0, 0), "Mašīna": (1, 0)}
    labels = {"Tiesnesis": "Tiesnesis", "Cilvēks": "Cilvēks", "Mašīna": "Mašīna"}

    nx.draw(G, pos, with_labels=True, labels=labels, node_size=3000, node_color="lightblue", edge_color="black", font_size=10)
    plt.title("Tjūringa tests: Tiesnesis sazinās ar Cilvēku un Mašīnu")
    plt.show()

# Vinograda shēmas izaicinājuma vizualizācija
def draw_winograd_schema():
    G = nx.DiGraph()

    # Mezglu definēšana
    G.add_nodes_from(["Teikums", "Vietniekvārds", "Pareizā interpretācija", "Nepareizā interpretācija"])
    
    # Savienojumi (bultiņas)
    edges = [("Teikums", "Vietniekvārds"), ("Vietniekvārds", "Pareizā interpretācija"), ("Vietniekvārds", "Nepareizā interpretācija")]
    G.add_edges_from(edges)

    # Diagrammas zīmēšana
    plt.figure(figsize=(6, 4))
    pos = {"Teikums": (0.5, 1), "Vietniekvārds": (0.5, 0.7), "Pareizā interpretācija": (0.2, 0.4), "Nepareizā interpretācija": (0.8, 0.4)}
    labels = {"Teikums": "Teikums", "Vietniekvārds": "Vietniekvārds", "Pareizā interpretācija": "Pareizā interpretācija", "Nepareizā interpretācija": "Nepareizā interpretācija"}

    nx.draw(G, pos, with_labels=True, labels=labels, node_size=2500, node_color="lightgreen", edge_color="black", font_size=10)
    plt.title("Vinograda shēmas izaicinājums: Vietniekvārda interpretācija")
    plt.show()

# Izsauc diagrammu veidošanas funkcijas
draw_turing_test()
draw_winograd_schema()
